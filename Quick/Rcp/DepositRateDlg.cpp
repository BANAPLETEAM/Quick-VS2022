// DepositRateDlg.cpp : 구현 파일입니다.
//

#include "stdafx.h"
#include "resource.h"
#include "DepositRateDlg.h"
#include "AutoGenerateDlg.h"

// CDepositRateDlg 대화 상자입니다.

IMPLEMENT_DYNAMIC(CDepositRateDlg, CMyDialog)
CDepositRateDlg::CDepositRateDlg(CWnd* pParent /*=NULL*/)
	: CMyDialog(CDepositRateDlg::IDD, pParent)
{
	m_nItem = -1;
	FirstTime = TRUE;
}

CDepositRateDlg::~CDepositRateDlg()
{
}

void CDepositRateDlg::DoDataExchange(CDataExchange* pDX)
{
	CMyDialog::DoDataExchange(pDX);
	DDX_Control(pDX, IDC_LIST, m_List);
}


BEGIN_MESSAGE_MAP(CDepositRateDlg, CMyDialog)
	ON_BN_CLICKED(IDOK, OnBnClickedOk)
	ON_BN_CLICKED(IDC_AUTO_GENERATE_BTN, OnBnClickedAutoGenerateBtn)
	ON_BN_CLICKED(IDC_SAVE_AFTER_SORT_BTN, OnBnClickedSaveAfterSortBtn)
	ON_BN_CLICKED(IDC_REMOVE_ALL_BTN, OnBnClickedRemoveAllBtn)
	ON_BN_CLICKED(IDC_DELETE_BTN, OnBnClickedDeleteBtn)
	ON_NOTIFY(LVN_ITEMCHANGED, IDC_LIST, OnLvnItemchangedList)
END_MESSAGE_MAP()


// CDepositRateDlg 메시지 처리기입니다.

BOOL CDepositRateDlg::OnInitDialog()
{
	CMyDialog::OnInitDialog();
	//SetWindowPos(&CWnd::wndTopMost, 0,0,0, 0, SWP_NOSIZE | SWP_NOMOVE);

    if(FirstTime)
	FirstTime = FALSE;
    else
    {
		if (Flush)
		{
			m_List.DeleteAllItems();
			m_List.EditSubItem (0, 0);
		}
		else
		{
			Flush = TRUE;
		}
		return TRUE;
    }

    CRect ClientRect;
    GetClientRect(&ClientRect);
    
	m_List.ModifyStyle(NULL, LVS_EDITLABELS | LVS_REPORT);
    m_List.SetExtendedStyle(LVS_EX_GRIDLINES);
    m_List.InsertColumn(0, "운행요금(원)");
    m_List.InsertColumn(1, "입금액(100이하 %)");
    m_List.SetColumnWidth(0, ClientRect.Width() / 2);
    m_List.SetColumnWidth(1, ClientRect.Width() / 2 - 25);

	RefreshList();

	return TRUE;  // return TRUE unless you set the focus to a control
	// 예외: OCX 속성 페이지는 FALSE를 반환해야 합니다.
}

void CDepositRateDlg::RefreshList()
{
	CMkCommand pCmd(m_pMkDb, "select_deposit_rate");
	pCmd.AddParameter(typeLong, typeInput, sizeof(long), m_nCompany);
	pCmd.AddParameter(typeLong, typeInput, sizeof(long), 0);
	CMkRecordset pRs(m_pMkDb);
	pRs.Execute(&pCmd);

	int nItem = 0;
	long nPay, nDeposit;

	m_List.DeleteAllItems();

	while(!pRs.IsEOF()) {
		pRs.GetFieldValue("nPay", nPay);
		pRs.GetFieldValue("nDeposit", nDeposit);
		m_List.InsertItem(nItem, LF->GetMyNumberFormat(nPay));
		m_List.SetItemText(nItem++, 1, LF->GetMyNumberFormat(nDeposit));
		pRs.MoveNext();
	}

	m_List.InsertItemEx(0xffff);
	pRs.Close();
}

BOOL CDepositRateDlg::SaveDeposit()
{
	if(IDYES == MessageBox("입금 테이블을 변경하시겠습니까?", "변경", 
				MB_ICONINFORMATION | MB_YESNO))
	{
		//CWaitCursor wait;

		CMkCommand pCmd(m_pMkDb, "check_deposit_updateflag");
		pCmd.AddParameter(typeLong, typeInput, sizeof(long), m_nCompany);
		pCmd.AddParameter(typeBool, typeInput, sizeof(long), 0);
		if(!pCmd.Execute()) return FALSE;

		for(int i = 0; i < m_List.GetItemCount(); i++)
		{
			CString strPay = m_List.GetItemText(i, 0);
			CString strDeposit = m_List.GetItemText(i, 1);
			strPay.Remove(',');
			strDeposit.Remove(',');

			if(atol(strPay) > 1)
			{
				CMkCommand pCmd(m_pMkDb, "update_deposit_rate");
				pCmd.AddParameter(typeLong, typeInput, sizeof(long), m_nCompany);
				pCmd.AddParameter(typeLong, typeInput, sizeof(long), 0);
				pCmd.AddParameter(typeLong, typeInput, sizeof(long), atol(strPay));
				pCmd.AddParameter(typeLong, typeInput, sizeof(long), atol(strDeposit));
				LU->UpdateDepositRate(m_nCompany, atol(strPay), atol(strDeposit));
				CMkRecordset pRs(m_pMkDb);
				if(!pRs.Execute(&pCmd)) return FALSE;
			}
		}

		CMkCommand pCmd2(m_pMkDb, "delete_old_deposit_rate");
		pCmd2.AddParameter(typeLong, typeInput, sizeof(long), m_nCompany);
		if(!pCmd2.Execute()) return FALSE;
				
		MessageBox("저장되었습니다.", "저장", MB_ICONINFORMATION);
		return TRUE;
	}
	return FALSE;
}

void CDepositRateDlg::OnBnClickedOk()
{
	if(SaveDeposit())
		OnOK();
}

void CDepositRateDlg::OnBnClickedAutoGenerateBtn()
{
	CAutoGenerateDlg dlg;
	char buffer[20];

	if(dlg.DoModal() == IDOK)
	{
		for(int i = atol(dlg.m_strFrom); i <= atol(dlg.m_strTo); i = i + atol(dlg.m_strUnit))
		{
			BOOL bCheckExsit = FALSE;
			for(int j = 0; j < m_List.GetItemCount(); j++)
			{
				CString strDeposit = m_List.GetItemText(j, 0);
				strDeposit.Remove(',');
				if(i == atol(strDeposit))
				{
					bCheckExsit = TRUE;	
					if(atol(dlg.m_strDeposit) < 100)
					{
						long nDeposit = i * atol(dlg.m_strDeposit) / 100;
                        m_List.SetItemText(j, 1, ltoa(nDeposit, buffer, 10));
					}
					else 
					{
                        m_List.SetItemText(j, 1, dlg.m_strDeposit);
					}
				}
			}

			if(!bCheckExsit)
			{
				int nItem = m_List.GetItemCount();
				
				if(nItem > 0) {
					if(m_List.GetItemText(nItem - 1, 0).IsEmpty()) {
						nItem--;
					}
				}

				m_List.InsertItem(nItem, ltoa(i, buffer, 10));
				if(atol(dlg.m_strDeposit) < 100) {
					long nDeposit = i * atol(dlg.m_strDeposit) / 100;
                    m_List.SetItemText(nItem, 1, ltoa(nDeposit, buffer, 10));
				}
				else {
                    m_List.SetItemText(nItem, 1, dlg.m_strDeposit);
				}
			}
		}
	}
}




void CDepositRateDlg::OnBnClickedSaveAfterSortBtn()
{
	if(SaveDeposit())
		RefreshList();
}

void CDepositRateDlg::OnBnClickedRemoveAllBtn()
{
	if(IDYES == MessageBox("입금 테이블 전체삭제 하시겠습니까?(저장하지 않으면 데이터베이스에 반영되지 않음)", "삭제", 
				MB_ICONINFORMATION | MB_YESNO))
	{
		m_List.DeleteAllItems();
	}
}

void CDepositRateDlg::OnBnClickedDeleteBtn()
{
	if(m_nItem >= 0) 
		m_List.DeleteItem(m_nItem);
}

void CDepositRateDlg::OnLvnItemchangedList(NMHDR *pNMHDR, LRESULT *pResult)
{
	LPNMLISTVIEW pNMLV = reinterpret_cast<LPNMLISTVIEW>(pNMHDR);
	
	*pResult = 0;
}
